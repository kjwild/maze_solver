<launch>
  
  <arg name="model" default="burger" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="first_name"  default="master"/>

  <arg name="master_x_pos" default="0.0"/>
  <arg name="master_y_pos" default="0.0"/>
  <arg name="master_z_pos" default="0.0"/>
  <arg name="master_yaw"   default="0.0"/>


  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find maze_solver)/worlds/maze_2.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <group ns = "$(arg first_name)">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
    <rosparam file="$(find maze_solver)/config/LDS-01.yaml" param="laser_params"/>

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg first_name)" />
    </node>
    
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg model) -x $(arg master_x_pos) -y $(arg master_y_pos) -z $(arg master_z_pos) -Y $(arg master_yaw) -param robot_description" />
    <node pkg="maze_solver" name="master_controller" type="controller.py" output="screen" args="$(arg first_name)"/>
  
  </group>
  
  <arg name="slam_methods" default="gmapping" doc="slam type [gmapping, cartographer, hector, karto, frontier_exploration]"/>
  <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>
  <arg name="open_rviz" default="true"/>
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

  <!-- SLAM: Gmapping, Cartographer, Hector, Karto, Frontier_exploration, RTAB-Map -->
  <include file="$(find turtlebot3_slam)/launch/turtlebot3_$(arg slam_methods).launch">
    <arg name="model" value="$(arg model)"/>
    <arg name="configuration_basename" value="$(arg configuration_basename)"/>
  </include>

  <!-- rviz -->
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find maze_solver)/rviz/master_gmapping.rviz"/>
  </group>


</launch>
